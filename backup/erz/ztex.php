<?php
/*
 *
 * Transforms ER in XML representation to
 * equivalent Z notation in pdf.
 *
 */


//$xmlDoc->load($_REQUEST['location']);
$tex = "\\documentstyle[fuzz]{article}\r\n";
$tex.= "\\begin{document}\r\n";

// Global variables
$m = 20; //margin
$h = 7; //height
$s = 10; //sangria
$state_entities = array();
$state_relationships = array();
$relationship_type = "";
$state_ids = array();
$id_null = array();

// Show header
$tex .= "Z Notation\r\n";
$tex .= "Generated by ERZ\r\n";

//read XML location
$xmlDoc = new DOMDocument();
$xmlDoc->load($_REQUEST['location']);

// Set type of relationship (by opposite or participation)
$x = $xmlDoc->getElementsByTagName('relation');
foreach ($x AS $item)
    $relationship_type = $item->getAttribute('relationship_type');


/*
 *
 * Show INFO scheme (entities and attributes)
 *
 */

$tex .= "Entities and attributes\r\n";

$entity = $xmlDoc->getElementsByTagName('entity');
foreach ($entity AS $ent){
    $tex .= "Entity: ".strtoupper($ent->getAttribute('name'))."\r\n";

    // For state information
    array_push($state_entities,strtoupper($ent->getAttribute('name')));

    // Definition of data diccionary
    $inicio = true;
    $id = 0;
    $att_nulo = true;
    $attribute = $xmlDoc->getElementsByTagName('attribute');

    // Show attributes
    foreach ($attribute AS $att){
        if ($att->parentNode->parentNode->getAttribute('name')==$ent->getAttribute('name')){
            if ($inicio){
                $inicio=false;
                $tex .= "\\begin{zed}\r\n";
                $tex .= '['.strtoupper($att->getAttribute('name'));
            }
            else $tex .= ', '.strtoupper($att->getAttribute('name'));
            if ($att->getAttribute('pk')=='true') {
                $id++;
                // For state information
                array_push($state_ids,strtolower($att->getAttribute('name')));
            }
            else $att_nulo = false;
        }
    }

    if (!$inicio) $tex .= "]\n";


    // Definition of INFO scheme

    if ($att_nulo){
        $tex .= "\\also\r\nNULL_".strtoupper($ent->getAttribute('name'))." ::= no_information_".strtolower($ent->getAttribute('name'));
        $tex .= "\r\n\\end{zed}\n";

        $tex .= "\\begin{schema}{INFO_".strtoupper($ent->getAttribute('name'))."}\r\n";
        $tex .= "att_".strtolower($ent->getAttribute('name')).": NULL_".strtoupper($ent->getAttribute('name'))."\r\n";
        $tex .= "\\end{schema}\r\n";
    }
    else{
        $tex .= "\r\n\\end{zed}\r\n";
        $tex .= "\\begin{schema}{INFO_".strtoupper($ent->getAttribute('name'))."}\r\n";

        $inicio=true;
        $attribute = $xmlDoc->getElementsByTagName('attribute');
        foreach ($attribute AS $att){
            if (($att->parentNode->parentNode->getAttribute('name')==$ent->getAttribute('name')) && ($att->getAttribute('pk')!='true')){
                $att_nulo = false;
                if ($inicio){
                    $tex .= strtolower($att->getAttribute('name')).": ".strtoupper($att->getAttribute('name'));
                    $inicio = false;
                }
                else
                    $tex .= "\\\\\r\n".strtolower($att->getAttribute('name')).": ".strtoupper($att->getAttribute('name'));

            }
        }
        $tex .= "\r\n\\end{schema}\r\n";
    }

    if ($id==0) $tex .= "Error: Each entity should have an id.\r\n";
    elseif ($id==1){
        // Definition of INSTA scheme
        $tex .= "\\begin{schema}{INSTA_".strtoupper($ent->getAttribute('name'))."}\r\n";

        $idname = '';
        $attribute = $xmlDoc->getElementsByTagName('attribute');
        foreach ($attribute AS $att){
            if (($att->parentNode->parentNode->getAttribute('name')==$ent->getAttribute('name')) && ($att->getAttribute('pk')=='true')){
                $idname = strtoupper($att->getAttribute('name'));
                $tex .= strtolower($idname).": \\power ".$idname." \\\\\r\n";
            }
        }

        $tex .= "info_".strtolower($ent->getAttribute('name')).": ".$idname." \\pfun INFO_".strtoupper($ent->getAttribute('name'))."\r\n";
        $tex .= "\\where\r\n".strtolower($idname)." = \\dom info_".strtolower($ent->getAttribute('name'))."\r\n";
        $tex .= "\\end{schema}\r\n";
    }
    else $tex .= "Warning: No multiple identifiers functionality.\r\n";
}


/*
 *
 * Show ASOCIA schemes (Relationships)
 *
 */

$tex .= "Relationships\r\n";

$r = $xmlDoc->getElementsByTagName('relationship');
foreach ($r AS $item){

    //state information
    array_push($state_relationships,'ASOCIA_'.strtoupper($item->getAttribute('parent')).'_'.strtoupper($item->getAttribute('child')));

    $tex .= "Relationship: ".strtoupper($item->getAttribute('parent'))."-".strtoupper($item->getAttribute('child'))."\r\n";

    $tex .= "\\begin{schema}{ASOCIA_".strtoupper($item->getAttribute('parent')).'_'.strtoupper($item->getAttribute('child'))."}\r\n";
    $idparent = '';
    $idchild = '';
    $attribute = $xmlDoc->getElementsByTagName('attribute');
    foreach ($attribute AS $att){
        if (($att->parentNode->parentNode->getAttribute('name')==$item->getAttribute('parent')) && ($att->getAttribute('pk')=='true')){
            $idparent = strtoupper($att->getAttribute('name'));
            $tex .= strtolower($att->getAttribute('name')).": \\power ".$idparent." \\\\\r\n";

            if (!in_array($idparent, $id_null)){
                if ($relationship_type=="Opposite"){
                    if (($item->getAttribute('card_parent')=='01') or ($item->getAttribute('card_parent')=='0N'))
                        array_push($id_null,$idparent);
                }
                else {
                    if (($item->getAttribute('card_child')=='01') or ($item->getAttribute('card_child')=='0N'))
                        array_push($id_null,$idparent);
                }
            }
        }
    }

    $attribute = $xmlDoc->getElementsByTagName('attribute');
    foreach ($attribute AS $att){
        if (($att->parentNode->parentNode->getAttribute('name')==$item->getAttribute('child')) && ($att->getAttribute('pk')=='true')){
            $idchild = strtoupper($att->getAttribute('name'));
            $tex .= strtolower($att->getAttribute('name')).": \\power ".$idchild." \\\\\r\n";
        }
    }


    $tex .= "asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child')).": ";
    $tex .= $idparent." \\rel ".$idchild."\r\n";


            $tex .= "\\where\r\n";





    if ($relationship_type=="Opposite"){

            $tex .= "\\dom asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child'))." ";

            // partial or inject function, depends of cardinality
            if (($item->getAttribute('card_child')=="01") or ($item->getAttribute('card_child')=="0N")) $tex .= "\\subseteq ";
            else $tex .= "= ";
            $tex .= $idparent."\r\n\\also\r\n";

            $tex .= "\\ran asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child'))." ";

            if (($item->getAttribute('card_parent')=="01") or ($item->getAttribute('card_parent')=="0N")) $tex .= "\\subseteq ";
            else $tex .= "= ";

            $tex .= $idchild."\r\n";

        if ((($item->getAttribute('card_parent')=="01") or ($item->getAttribute('card_parent')=="11")) and (($item->getAttribute('card_child')=="0N") or ($item->getAttribute('card_child')=="1N") )){
            $tex .= "\r\n\\also\r\n asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child'))." \inv  \in ";
            $tex .= $idchild." \\pfun ".$idparent."\r\n";
        }
        elseif ((($item->getAttribute('card_parent')=="0N") or ($item->getAttribute('card_parent')=="1N")) and (($item->getAttribute('card_child')=="01") or ($item->getAttribute('card_child')=="11") )){
            $tex .= "\r\n\\also\r\n asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child'))." \in ";
            $tex .= $idparent." \\pfun ".$idchild."\r\n";
        }
        elseif ((($item->getAttribute('card_parent')=="01") or ($item->getAttribute('card_parent')=="11")) and (($item->getAttribute('card_child')=="01") or ($item->getAttribute('card_child')=="11") )){
            $tex .= "\r\n\\also\r\n asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child'))." \in ";
            $tex .= $idparent." \\pinj ".$idchild."\r\n";

        }
    }
    else{ //Relationship by Participation

            $tex .= "\\dom asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child'))." ";

            // partial or inject function, depends of cardinality
            if (($item->getAttribute('card_parent')=="01") or ($item->getAttribute('card_parent')=="0N")) $tex .= "\\subseteq ";
            else $tex .= "= ";
            $tex .= $idparent."\r\n\\also\r\n";

            $tex .= "\\ran asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child'))." ";

            if (($item->getAttribute('card_child')=="01") or ($item->getAttribute('card_child')=="0N")) $tex .= "\\subseteq ";
            else $tex .= "= ";

            $tex .= $idchild."\r\n";

        if ((($item->getAttribute('card_parent')=="0N") or ($item->getAttribute('card_parent')=="1N")) and (($item->getAttribute('card_child')=="01") or ($item->getAttribute('card_child')=="11") )){
            $tex .= "\r\n\\also\r\n asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child'))." \inv  \in ";
            $tex .= $idchild." \\pfun ".$idparent."\r\n";
        }
        elseif ((($item->getAttribute('card_parent')=="01") or ($item->getAttribute('card_parent')=="11")) and (($item->getAttribute('card_child')=="0N") or ($item->getAttribute('card_child')=="1N") )){
            $tex .= "\r\n\\also\r\n asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child'))." \in ";
            $tex .= $idparent." \\pfun ".$idchild."\r\n";
        }
        elseif ((($item->getAttribute('card_parent')=="01") or ($item->getAttribute('card_parent')=="11")) and (($item->getAttribute('card_child')=="01") or ($item->getAttribute('card_child')=="11") )){
            $tex .= "\r\n\\also\r\n asocia_".strtolower($item->getAttribute('parent'))."_".strtolower($item->getAttribute('child'))." \in ";
            $tex .= $idparent." \\pinj ".$idchild."\r\n";
        }
    }
    $tex .= "\\end{schema}\r\n";
}


/*
 *
 * FreeType Definitions (if exists)
 *
 */

if (!empty($id_null)){
    $tex .= "FreeType Definitions:\r\n";
    $tex .= "\\begin{zed}\r\n";
    $inicio = true;
    foreach ($id_null AS $id){
        if ($inicio){
            $tex .= "NULL_".strtoupper($id)." ::= null_".strtolower($id)." | n".strtolower($id);
            $tex .= " \\ldata ".strtoupper($id)." \\rdata";
            $inicio = false;
        }
        else{
            $tex .= " \\\\\r\n";
            $tex .= "NULL_".strtoupper($id)." ::= null_".strtolower($id)." | n".strtolower($id);
            $tex .= " \\ldata ".strtoupper($id)." \\rdata";
        }
    }
    $tex .= "\r\n\\end{zed}\r\n";
}



/*
 *
 * Show SYSTEM STATE scheme
 */

$tex .= "System State\r\n";

$tex .= "\\begin{schema}{SYSTEM_STATE}\r\n";
$inicio = true;
foreach ($state_entities AS $ent){
    if ($inicio){
        $tex .= "INSTA_".$ent;
        $inicio = false;
    }
    else{
        $tex .= " \\\\\r\n INSTA_".$ent;
    }
}

foreach ($state_relationships AS $item){
    $tex .= " \\\\\r\n".$item;
}

$tex .= "\r\n\\end{schema}\r\n";


// INITIAL SYSTEM STATE
$tex .= "\\begin{schema}{INITIAL_SYSTEM_STATE}\r\n";
$inicio = true;

$tex .= "SYSTEM_STATE'\r\n";
$tex .= "\\where\r\n";

foreach ($state_ids AS $ent){
    if ($inicio){
        $tex .= $ent."'= \\emptyset";
        $inicio = false;
    }
    else{
        $tex .= "\r\n\\also\r\n".$ent."'= \\emptyset";
    }
}

foreach ($state_relationships AS $item){
    $tex .= "\r\n\\also\r\n".strtolower($item)."'= \\emptyset";
}

$tex .= "\r\n\\end{schema}\r\n";



/*
 *
 * Show OPERATION schemes
 *
 */




$tex .= "Schemes for operations\r\n";

foreach ($state_entities AS $ent){
    $tex .= "\\begin{schema}{".strtoupper($ent)."_OPERATION}\r\n";
    $tex .= "\\Delta SYSTEM_STATE";
    $inicio = true;



    foreach ($state_entities AS $ent1){
        if ($ent1!=$ent){
            $tex .= " \\\\\r\n \\Xi INSTA_".strtoupper($ent1);
        }
    }


    $r = $xmlDoc->getElementsByTagName('relationship');
    foreach ($r AS $item){
        if (strtoupper($item->getAttribute('child'))!=$ent){
            $tex .= " \\\\\r\n  \\Xi ASOCIA_".strtoupper($item->getAttribute('parent'))."_".strtoupper($item->getAttribute('child'));
        }
    }
    $tex .= "\r\n\\end{schema}\r\n";
}





/*
// OPERATIONS

    $pdf->SetFont('Arial','B',11);
    $pdf->Ln($h*2.2);
    $pdf->Write($h,'Schemes for operations');
    $pdf->SetFont('Arial','',11);


foreach ($state_entities AS $ent){
    $pdf->Ln($h*2.2);
    $pdf->Cell($s);

    $x = $pdf->GetX()-1;
    $y = $pdf->GetY()+($h/2);
    if ($y>220){
        $pdf->AddPage();
        $pdf->Cell($s);
        $x = $pdf->GetX()-1;
        $y = $pdf->GetY()+($h/2);
    }

    $pdf->Line($pdf->GetX()-1,$pdf->GetY()+($h/2),$pdf->GetX()+1,$pdf->GetY()+($h/2));
    $pdf->Line($pdf->GetX()-1,$pdf->GetY()+($h/2),$pdf->GetX()-1,$pdf->GetY()+($h*1.5));
    $pdf->Write($h,strtoupper($ent).'_OPERATION');
    $pdf->Line($pdf->GetX()+1,$pdf->GetY()+($h/2),175,$pdf->GetY()+($h/2));

    $pdf->Ln($h);
    $pdf->Cell($s);
    $pdf->Image('zimg/Delta-m.gif',$pdf->GetX()+2,$pdf->GetY()+1);
    $pdf->Cell($s/2);
    $pdf->Write($h,"SYSTEM_STATE");

foreach ($state_entities AS $ent1){
    if ($ent1!=$ent){
        $pdf->Ln($h);
        $pdf->Cell($s);
        $pdf->Image('zimg/Xi-s.gif',$pdf->GetX()+2,$pdf->GetY()+1);
        $pdf->Cell($s/2);
        $pdf->Write($h,"INSTA_".strtoupper($ent1));
    }
}

$r = $xmlDoc->getElementsByTagName('relationship');
foreach ($r AS $item){
    if (strtoupper($item->getAttribute('parent'))!=$ent){
        $pdf->Ln($h);
        $pdf->Cell($s);
        $pdf->Image('zimg/Xi-s.gif',$pdf->GetX()+2,$pdf->GetY()+1);
        $pdf->Cell($s/2);
        $pdf->Write($h,'ASOCIA_'.strtoupper($item->getAttribute('parent')).'_'.strtoupper($item->getAttribute('child')));
    }
}

        if ($y>$pdf->GetY()) $pdf->Line($x,20,$x,$pdf->GetY()+$h);
        else $pdf->Line($x,$y,$x,$pdf->GetY()+$h);
        $pdf->Line($x,$pdf->GetY()+$h,175,$pdf->GetY()+$h);
}

*/



/*
 *
 * Basic Operations
 *
 */

$tex .= "Basic Operations\r\n";
$noresponse = true;

foreach ($state_entities AS $ent){
    $tex .= "Basic Operations for ".$ent."\r\n";

    $ischild = false;
    $haschild = false;
    $r = $xmlDoc->getElementsByTagName('relationship');
    foreach ($r AS $item){
        if (strtoupper($item->getAttribute('child'))==$ent) $ischild = true;
        if (strtoupper($item->getAttribute('parent'))==$ent) $haschild = true;
    }

    $id = "";
    $a = $xmlDoc->getElementsByTagName('attribute');
    foreach ($a AS $item)
        if ((strtoupper($item->parentNode->parentNode->getAttribute('name'))==$ent) && ($item->getAttribute('pk')=='true'))
            $id = $item->getAttribute('name');




    /*
     *  ADD_OK operation
     */

     $null_noexists = true;

    $tex .= "\\begin{schema}{".strtoupper($ent)."_ADD_OK}\r\n";

    $tex .= strtoupper($ent)."_OPERATION \\\\\r\n";

    $tex .= strtolower($id)."_in? : ".strtoupper($id)." \\\\\r\n";
    $tex .= "info_".strtolower($ent)."_in? : INFO_".strtoupper($ent)." \\\\\r\n";


    if (!$ischild){
        $tex .= "\\where\r\n";
        $tex .= $id."_in? \\notin ".$id."\r\n\\also\r\n";
        $tex .= $id."' = ".$id." \\cup \{".$id."_in?\}\r\n\\also\r\n";
        $tex .= "info_".strtolower($ent)."' = info_".strtolower($ent);
        $tex .= " \\cup \{".$id."_in? \\mapsto info_".strtolower($ent)."_in?\}";
        $tex .= "\r\n\\end{schema}\r\n";
    }
    else{
        // la entidad participa en asociaciones como hija
        $r = $xmlDoc->getElementsByTagName('relationship');
        $inicio = true;
        foreach ($r AS $re){
            if (strtoupper($re->getAttribute('child'))==$ent){
                $a = $xmlDoc->getElementsByTagName('attribute');
                foreach ($a AS $at){
                    if ((strtoupper($at->parentNode->parentNode->getAttribute('name'))==strtoupper($re->getAttribute('parent'))) && ($at->getAttribute('pk')=='true')){
                        $idparent = $at->getAttribute('name');


                        if ($relationship_type=="Opposite"){
                            if (($re->getAttribute('card_parent')=='01') or ($re->getAttribute('card_parent')=='0N')){
                                $idparent = strtoupper('NULL_'.$idparent);
                                $null_noexists = false;
                            }
                        }
                        else {
                            if (($re->getAttribute('card_child')=='01') or ($re->getAttribute('card_child')=='0N')){
                                $idparent = strtoupper('NULL_'.$idparent);
                                $null_noexists = false;
                            }
                        }
                        if ($inicio){
                            $tex .= strtolower($idparent)."_in? : ".strtoupper($idparent);
                            $inicio = false;
                        }
                        else
                            $tex .= " \\\\\r\n".strtolower($idparent)."_in? : ".strtoupper($idparent);
                    }
                }
            }
        }


        $tex .= "\r\n\\where\r\n";
        $tex .= $id."_in? \\notin ".$id."\r\n\\also\r\n";



        $r = $xmlDoc->getElementsByTagName('relationship');
        foreach ($r AS $re){
            if (strtoupper($re->getAttribute('child'))==$ent){
                $a = $xmlDoc->getElementsByTagName('attribute');
                foreach ($a AS $at){
                    if ((strtoupper($at->parentNode->parentNode->getAttribute('name'))==strtoupper($re->getAttribute('parent'))) && ($at->getAttribute('pk')=='true')){
                        $idparent = $at->getAttribute('name');
                        if ($relationship_type=="Opposite"){
                            if (($re->getAttribute('card_parent')=='01') or ($re->getAttribute('card_parent')=='0N')){
                                $idparent = strtoupper('NULL_'.$idparent);
                                $null_noexists = false;
                            }
                        }
                        else {
                            if (($re->getAttribute('card_child')=='01') or ($re->getAttribute('card_child')=='0N')){
                                $idparent = strtoupper('NULL_'.$idparent);
                                $null_noexists = false;
                            }
                        }
                        if ($null_noexists)
                            $tex .= "\r\n\\also\r\n".strtolower($idparent)."_in? \\in ".strtolower($idparent)."\r\n\\also\r\n";

                    }
                }
            }
        }

        $tex .= $id."' = ".$id." \\cup \{".$id."_in?\}\r\n\\also\r\n";
        $tex .= "info_".strtolower($ent)."' = info_".strtolower($ent);
        $tex .= " \\cup \{".$id."_in? \\mapsto info_".strtolower($ent)."_in?\}\r\n";

        $r = $xmlDoc->getElementsByTagName('relationship');
        foreach ($r AS $re){
            if (strtoupper($re->getAttribute('child'))==$ent){
                $connect_simple=true;
                $idparent = "";
                $parent = strtoupper($re->getAttribute('parent'));
                $a = $xmlDoc->getElementsByTagName('attribute');
                foreach ($a AS $at)
                    if ((strtoupper($at->parentNode->parentNode->getAttribute('name'))==$parent) && ($at->getAttribute('pk')=='true')){
                        $idparent = $at->getAttribute('name');
                        $idparent_old = $idparent;
                        if ($relationship_type=="Opposite"){
                            if (($re->getAttribute('card_parent')=='01') or ($re->getAttribute('card_parent')=='0N')){
                                $idparent = strtoupper('NULL_'.$idparent);
                                $connect_simple =false;
                            }
                        }
                        else {
                            if (($re->getAttribute('card_child')=='01') or ($re->getAttribute('card_child')=='0N')){
                                $idparent = strtoupper('NULL_'.$idparent);
                                $connect_simple =false;
                            }
                        }
                    }


                if ($connect_simple){
                    $asocia = "asocia_".strtolower($parent)."_".strtolower($ent);
                    $tex .= "\\also\r\n".$asocia."' = ".$asocia." \\cup \{".strtolower($idparent)."_in? \\mapsto ".$id."_in?\}";
                }
                else{

                    //$tex .= "\r\n\\also\r\n n".strtolower($idparent_old)."\inv ".strtolower($idparent)."_in? \\in ".strtoupper($idparent_old);
                    $tex .= "\r\n\\also\r\n(( ".strtolower($idparent)."_in? \\neq ".strtolower($idparent)." \\land \\\\";
                    $tex .= "\r\n n".strtolower($idparent_old)." \inv ".strtolower($idparent)."_in? \\in ".strtoupper($idparent_old)." \\land \\\\ \r\n";
                    $asocia = "asocia_".strtolower($parent)."_".strtolower($ent);
                    $tex .= " ".$asocia."' = ".$asocia." \\cup \\\\ \r\n \{n".strtolower($idparent_old)." \inv ".strtolower($idparent)."_in?";
                    $tex .= " \\mapsto ".$id."_in? \} )";
                    $tex .= " \\lor ".$asocia."' = ".$asocia." )";
                }
            }
        }
        $tex .= "\r\n\\end{schema}\r\n";
    }


    /*
     *  DELETE_OK operation
     */

    $tex .= "\\begin{schema}{".strtoupper($ent)."_DELETE_OK}\r\n";

    $tex .= strtoupper($ent)."_OPERATION \\\\\r\n";

    $tex .= strtolower($id)."_in? : ".strtoupper($id)." \\\\\r\n";


    $tex .= "\\where \r\n";
    $tex .= $id."_in? \\in ".$id;

    if ($haschild){
        $r = $xmlDoc->getElementsByTagName('relationship');
        foreach ($r AS $re){
            if (strtoupper($re->getAttribute('parent'))==$ent){
                $child = strtoupper($re->getAttribute('child'));
                $tex .= "\r\n\\also \r\n".$id."_in? \\notin \\dom asocia_".strtolower($ent)."_".strtolower($child);
            }
        }
    }

    if ($ischild){
        $r = $xmlDoc->getElementsByTagName('relationship');
        foreach ($r AS $re){
            if (strtoupper($re->getAttribute('child'))==$ent){
                $parent = strtoupper($re->getAttribute('parent'));
                $tex .= "\\also \r\n";
                $asocia = "asocia_".strtolower($parent)."_".strtolower($ent);
                $tex .= "\\also \r\n".$asocia."' = ".$asocia." \\nrres \{".$id."_in?\} ";
            }
        }
    }

    $tex .= "\\also \r\n info_".strtolower($ent)."' = \{".$id."_in?\} \\ndres info_".strtolower($ent);
    $tex .= "\\also \r\n ".$id."' = ".$id." \setminus \{".$id."_in?\}";

    $tex .= "\r\n\\end{schema}\r\n";


    /*
     *  UPDATE_OK operation
     */


    $tex .= "\\begin{schema}{".strtoupper($ent)."_UPDATE_OK}\r\n";

    $tex .= strtoupper($ent)."_OPERATION \\\\\r\n";

    $tex .= strtolower($id)."_in? : ".strtoupper($id)." \\\\\r\n";
    $tex .= "info_".strtolower($ent)."_in? : INFO_".strtoupper($ent)." \\\\\r\n";

    $tex .= "\\where \r\n";
    $tex .= $id."_in? \\in ".$id."\r\n";
    $tex .= "\\also \r\n";
    $tex .= "info_".strtolower($ent)."' = info_".strtolower($ent)." \\oplus \{".$id."_in? \\mapsto info_".strtolower($ent)."_in?\}";

    if ($ischild){
        // la entidad tiene asociaciones como hija

        $r = $xmlDoc->getElementsByTagName('relationship');
        foreach ($r AS $re){
            if (strtoupper($re->getAttribute('child'))==$ent){
                $parent = strtoupper($re->getAttribute('parent'));
                $asocia = "asocia_".strtolower($parent)."_".strtolower($ent);
                $tex .= "\\also \r\n";
                $tex .= $asocia."' = ".$asocia."\r\n";
            }
        }
    }
    $tex .= "\r\n\\end{schema}\r\n";


    /*
     *  QUERY_OK operation
     */

    $tex .= "\\begin{schema}{".strtoupper($ent)."_QUERY_OK}\r\n";
    $tex .= "\\Xi SYSTEM_STATE \\\\\r\n";
    $tex .= strtolower($id)."_in? : ".strtoupper($id)." \\\\\r\n";
    $tex .= "info_".strtolower($ent)."_out! : INFO_".strtoupper($ent)." \r\n";
    $tex .= "\\where \r\n";
    $tex .= $id."_in? \\in ".$id;
    $tex .= "\r\n\\also \r\n";
    $tex .= "info_".strtolower($ent)."_out! = info_".strtolower($ent)."(".$id."_in?)";
    $tex .= "\r\n\\end{schema}\r\n";


    /*
     * Show Responses
     */

    $tex .= "Response Messages:\r\n";

    // Response
    if ($noresponse){
        $tex .= "\\begin{zed}\r\n";
        $tex .= "RESPONSE ::= OK | EXISTS | NOT_FOUND | HAS_RELATIONSHIPS \r\n";
        $tex .= "\\end{zed}\r\n";
        $noresponse = false;


        // Successful Response
        $tex .= "\\begin{schema}{SUCCESS_OP}\r\n";
        $tex .= "response! : RESPONSE\r\n";
        $tex .= "\\where \r\n";
        $tex .= "response! = OK";
        $tex .= "\r\n\\end{schema}\r\n";
    }

    // Entity Error
    $tex .= "\\begin{schema}{".strtoupper($ent)."_ERROR}\r\n";
    $tex .= "\\Xi SYSTEM_STATE\r\n";
    $tex .= "\r\n\\also\r\n".strtolower($id)."_in? : ".strtoupper($id)."\r\n";
    $tex .= "\r\n\\also\r\nresponse! : RESPONSE";
    $tex .= "\r\n\\end{schema}\r\n";

    // INSTANCE EXISTS
    $tex .= "\\begin{schema}{".strtoupper($ent)."_EXISTS}\r\n";
    $tex .= $ent."_ERROR \r\n";
    $tex .= "\\where \r\n";
    $tex .= $id."_in? \\in ".$id."\r\n";
    $tex .= "\\also \r\n";
    $tex .= "response! = EXISTS";
    $tex .= "\r\n\\end{schema}\r\n";

    // INSTANCE NOT FOUND
    $tex .= "\\begin{schema}{".strtoupper($ent)."_NOT_FOUND}\r\n";
    $tex .= $ent."_ERROR \r\n";
    $tex .= "\\where \r\n";
    $tex .= $id."_in? \\notin ".$id."\r\n";
    $tex .= "\\also \r\n";
    $tex .= "response! = NOT_FOUND";
    $tex .= "\r\n\\end{schema}\r\n";

    // INSTANCE HAS RELATIONSHIPS

    if ($haschild){
        $tex .= "\\begin{schema}{".strtoupper($ent)."_HAS_RELATIONSHIPS}\r\n";
        $tex .= $ent."_ERROR \r\n";
        $tex .= "\\where \r\n";

        $inicio = true;
        $r = $xmlDoc->getElementsByTagName('relationship');
        foreach ($r AS $re){
            if (strtoupper($re->getAttribute('parent'))==$ent){
                if ($inicio){
                    $inicio = false;
                }
                else $tex .= "\\lor ";
                $child = strtoupper($re->getAttribute('child'));
                $tex .= "(".$id."_in? \\in \\dom asocia_".strtolower($ent)."_".strtolower($child);
                $tex .= " \\land \r\n response! = HAS_RELATIONSHIPS)";
            }
        }
        $tex .= "\r\n\\end{schema}\r\n";
    }

}


/*
 *
 * Final Schemes
 *
 */
$tex .= "Complete Operations\r\n";
$noresponse = true;

foreach ($state_entities AS $ent){
    $tex .= "Complete operations for ".$ent."\r\n";

    $ischild = false;
    $haschild = false;
    $r = $xmlDoc->getElementsByTagName('relationship');
    foreach ($r AS $item){
        if (strtoupper($item->getAttribute('child'))==$ent) $ischild = true;
        if (strtoupper($item->getAttribute('parent'))==$ent) $haschild = true;
    }

    $id = "";
    $a = $xmlDoc->getElementsByTagName('attribute');
    foreach ($a AS $item)
        if ((strtoupper($item->parentNode->parentNode->getAttribute('name'))==$ent) && ($item->getAttribute('pk')=='true'))
            $id = $item->getAttribute('name');


    $tex .= "\\begin{zed}\r\n";
    $tex .= $ent."_ADD \\defs (".$ent."_ADD_OK \\land SUCCESS_OP)\r\n";
    $tex .= "\\lor ".$ent."_EXISTS\r\n";
    if ($ischild){
        $r = $xmlDoc->getElementsByTagName('relationship');
        foreach ($r AS $re){
            if (strtoupper($re->getAttribute('child'))==$ent){
                $tex .= "\\lor ".strtoupper($re->getAttribute('parent'))."_NOT_FOUND\r\n";
            }
        }
    }
    $tex .= "\\also\r\n";

    $tex .= $ent."_DELETE \\defs (".$ent."_DELETE_OK \\land SUCCESS_OP)\r\n";
    $tex .= "\\lor ".$ent."_NOT_FOUND\r\n";
    if ($haschild){
        $tex .= "\\lor ".strtoupper($re->getAttribute('parent'))."_HAS_RELATIONSHIPS\r\n";
    }

    $tex .= "\\also\r\n";

    $tex .= $ent."_UPDATE \\defs (".$ent."_UPDATE_OK \\land SUCCESS_OP)\r\n";
    $tex .= "\\lor ".$ent."_NOT_FOUND\r\n";

    $tex .= "\\also\r\n";

    $tex .= $ent."_QUERY \\defs (".$ent."_QUERY_OK \\land SUCCESS_OP)\r\n";
    $tex .= "\\lor ".$ent."_NOT_FOUND\r\n";

    $tex .= "\\end{zed}\r\n";
}

$tex .= "\\end{document}";

$tex = str_replace("_","\_",$tex);

$html = str_replace("\r\n","<br>",$tex);
echo $html;

$file = fopen('spec.tex', 'w');
fwrite($file,$tex);
fclose($file);

echo '<META HTTP-EQUIV=Refresh CONTENT=0;URL="spec.tex">';

?>