export function zLatex(data) {
    let z = '\\documentstyle[fuzz]{article}\r\n'
    z += '\\begin{document}\r\n';
    z += '\\section*{Z Notation}\r\n';
    z += 'Generated by ERZ\r\n';

    // Procesar las entidades y sus atributos
    z += '\\subsection*{Specification of entities and their attributes}';
    for (let entityName in data.entities) {
        const entity = data.entities[entityName];
        z += `\\subsubsection*{Entity: ${entity.name.toUpperCase()}}\r\n`;

        // basic type definition
        z += `Basic type definition:\r\n`;
        z += '\\begin{zed}\r\n\t[';
        entity.attr.forEach((attr, index) => {
            z += attr.name;
            if (index < entity.attr.length - 1) z += ', ';
        });
        z += ']\r\n\\end{zed}\r\n';

        // basic type definition
        z += `Schema of entity information:\r\n`;
        z += `\\begin{schema}{${entity.name.toUpperCase()}\\_INFORMATION}\r\n`;
        entity.attr.forEach((attr, index) => {
            if (!attr.key) z += `\t${attr.name}\\\\\r\n`;
        });
        z += '\\end{schema}\r\n';        
    }

    z += '\\end{document}\r\n'

    
    return z;
}